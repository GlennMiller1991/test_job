{"version":3,"sources":["components/Table/Table.tsx","App.tsx","reportWebVitals.ts","redux/entriesReducer.ts","redux/rootStore.ts","index.tsx","components/Table/Table.module.css","App.module.css"],"names":["Table","className","styles","wrapper","row","hat","App","React","memo","useEffect","document","title","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TEST","initialData","entries","data","totalCount","length","pageSize","reducers","combineReducers","entriesPage","state","action","type","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"oNAGaA,EAAkB,WAC3B,OACI,qBAAKC,UAAWC,IAAOC,QAAvB,SACI,sBAAKF,UAAS,UAAKC,IAAOE,IAAZ,YAAmBF,IAAOG,KAAxC,UACI,0FACA,+HACA,8HACA,6E,QCWDC,EAfOC,IAAMC,MAAK,WAK7B,OAJAC,qBAAU,WACNC,SAASC,MAAQ,gGAClB,IAGC,cAAC,IAAD,UACI,sBAAKV,UAAWC,IAAOU,IAAvB,UACI,6HACA,cAAC,EAAD,YCDDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCLRQ,EAAO,OA8CPC,EAA+B,CACjCC,QAASC,EACTC,WAAYD,EAAKE,OACjBC,SAAU,GC5CRC,EAAWC,YAAgB,CACzBC,YD8CsB,WAAgE,IAA/DC,EAA8D,uDAArCT,EAAaU,EAAwB,uCACzF,OAAQA,EAAOC,MACX,KAAKZ,EAEL,QACI,OAAOU,MC/CNG,EAAQC,YAAYP,EAAUQ,YAAgBC,MAG3DC,OAAOJ,MAAQA,ECTfK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRzB,SAASiC,eAAe,SAM5B9B,K,kBCnBA+B,EAAOC,QAAU,CAAC,QAAU,uBAAuB,IAAM,mBAAmB,IAAM,qB,kBCAlFD,EAAOC,QAAU,CAAC,IAAM,mB","file":"static/js/main.62be68e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './Table.module.css'\r\n\r\nexport const Table: React.FC = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={`${styles.row} ${styles.hat}`}>\r\n                <div>Номер/дата</div>\r\n                <div>Тип задания/автор</div>\r\n                <div>Аккаунт/Терминал</div>\r\n                <div>Статус</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport './App.module.css';\nimport {Table} from './components/Table/Table';\nimport styles from './App.module.css'\nimport {HashRouter} from \"react-router-dom\";\n\nconst App: React.FC = React.memo(() => {\n    useEffect(() => {\n        document.title = 'Тестовое задание'\n    }, [])\n\n    return (\n        <HashRouter>\n            <div className={styles.app}>\n                <h1>Тестовое задание</h1>\n                <Table/>\n            </div>\n        </HashRouter>\n    )\n})\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import data from '../data/initialData.json'\r\nimport {actionsType} from \"./rootStore\";\r\n\r\n//constants\r\nconst TEST = 'TEST'\r\n\r\n//types\r\nexport type entryType = {\r\n    id: number,\r\n    oguid: string,\r\n    status: string,\r\n    order_type: {\r\n        name: string,\r\n        oguid: string,\r\n    },\r\n    terminal: {\r\n        name: string,\r\n        oguid: string,\r\n    },\r\n    account: {\r\n        name: string,\r\n        oguid: string,\r\n    },\r\n    created_user: {\r\n        surname: string,\r\n        name: string,\r\n        patronymic: string,\r\n        oguid: string,\r\n    },\r\n    created_date: number,\r\n}\r\nexport type entriesPageType = {\r\n    entries: entryType[],\r\n    totalCount: number,\r\n    pageSize: number,\r\n}\r\n\r\n//action types\r\nexport type testActionType = ReturnType<typeof test>\r\n//action and thunk creators\r\nexport const test = () => {\r\n    return {\r\n        type: TEST,\r\n        payload: {\r\n\r\n        }\r\n    } as const\r\n}\r\n\r\n\r\nconst initialData: entriesPageType = {\r\n    entries: data,\r\n    totalCount: data.length,\r\n    pageSize: 3,\r\n}\r\n\r\nexport const entriesReducer = (state: entriesPageType = initialData, action: actionsType) => {\r\n    switch (action.type) {\r\n        case TEST:\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {entriesReducer, testActionType} from \"./entriesReducer\";\r\n\r\n//types\r\nexport type actionsType = testActionType\r\nexport type stateType = ReturnType<typeof store.getState>\r\nexport type dispatchType = typeof store.dispatch\r\n\r\nconst reducers = combineReducers({\r\n        entriesPage: entriesReducer,\r\n    }\r\n)\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/rootStore\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__1ItqM\",\"hat\":\"Table_hat__-MJ_c\",\"row\":\"Table_row__1W1qc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__eCSbw\"};"],"sourceRoot":""}